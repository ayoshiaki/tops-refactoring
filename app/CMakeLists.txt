INCLUDE_DIRECTORIES( ${ToPS_SOURCE_DIR}/src )

IF(UNIX)
  INCLUDE_DIRECTORIES( ${Boost_INCLUDE_DIR} )
  INCLUDE_DIRECTORIES( ${RMATH_INCLUDE_DIR} )
ENDIF(UNIX)

IF(WIN32)
  ADD_DEFINITIONS(-DWIN32)
  SET(APP_DEP ToPS)
ENDIF(WIN32)

IF(UNIX)
  SET(APP_DEP ToPS ${BOOST_REGEX_LIBRARY} ${RMATH_LIBRARY} ${BOOST_PROGRAM_OPTIONS_LIBRARY})
ENDIF(UNIX)

ADD_EXECUTABLE(train train.cpp)
ADD_EXECUTABLE(viterbi_decoding viterbi_decoding.cpp) 
ADD_EXECUTABLE(mea_decoding mea_decoding.cpp) 
ADD_EXECUTABLE(simulate simulate.cpp)
ADD_EXECUTABLE(bayes_classifier bayes_classifier.cpp)
ADD_EXECUTABLE(one_file_model one_file_model.cpp)
ADD_EXECUTABLE(sliding_window sliding_window.cpp)
ADD_EXECUTABLE(test_read_seq test_read_seq.cpp)
ADD_EXECUTABLE(evaluate evaluate.cpp)
ADD_EXECUTABLE(kullback_positional kullback_positional.cpp)
ADD_EXECUTABLE(posterior_probabilities posterior_probabilities.cpp)
ADD_EXECUTABLE(posterior_decoding posterior_decoding.cpp)
ADD_EXECUTABLE(choose_path choose_path.cpp)
ADD_EXECUTABLE(remove_invalid_symbols remove_invalid_symbols.cpp)
ADD_EXECUTABLE(simulateAlignment simulateAlignment.cpp)
ADD_EXECUTABLE(align align.cpp)
ADD_EXECUTABLE(testeFBGHMM testeFBGHMM.cpp)
ADD_EXECUTABLE(testeGPHMM testeGPHMM.cpp)
ADD_EXECUTABLE(predalign predalign.cpp)
ADD_EXECUTABLE(runAllPredalignTests runAllPredalignTests.cpp)
ADD_EXECUTABLE(print_graph_from_model print_graph_from_model.cpp)
ADD_EXECUTABLE(profileHMMtests profileHMMtests.cpp)
ADD_EXECUTABLE(teste_mdd teste_mdd.cpp)

TARGET_LINK_LIBRARIES(evaluate ${APP_DEP} )
TARGET_LINK_LIBRARIES(train ${APP_DEP} )
TARGET_LINK_LIBRARIES(test_read_seq ${APP_DEP} )
TARGET_LINK_LIBRARIES(one_file_model ${APP_DEP} )
TARGET_LINK_LIBRARIES(viterbi_decoding ${APP_DEP} ) 
TARGET_LINK_LIBRARIES(mea_decoding ${APP_DEP} ) 
TARGET_LINK_LIBRARIES(simulate ${APP_DEP} )
TARGET_LINK_LIBRARIES(bayes_classifier ${APP_DEP} )
TARGET_LINK_LIBRARIES(sliding_window ${APP_DEP} )
TARGET_LINK_LIBRARIES(kullback_positional ${APP_DEP} )
TARGET_LINK_LIBRARIES(posterior_probabilities ${APP_DEP} )
TARGET_LINK_LIBRARIES(posterior_decoding ${APP_DEP} )
TARGET_LINK_LIBRARIES(choose_path ${APP_DEP} )
TARGET_LINK_LIBRARIES(remove_invalid_symbols ${APP_DEP} )
TARGET_LINK_LIBRARIES(simulateAlignment ${APP_DEP} )
TARGET_LINK_LIBRARIES(align ${APP_DEP} )
TARGET_LINK_LIBRARIES(testeFBGHMM ${APP_DEP} )
TARGET_LINK_LIBRARIES(testeGPHMM ${APP_DEP} )
TARGET_LINK_LIBRARIES(predalign ${APP_DEP} )
TARGET_LINK_LIBRARIES(runAllPredalignTests ${APP_DEP} )
TARGET_LINK_LIBRARIES(posterior_decoding ${APP_DEP} )
TARGET_LINK_LIBRARIES(print_graph_from_model ${APP_DEP} )
TARGET_LINK_LIBRARIES(profileHMMtests ${APP_DEP} )
TARGET_LINK_LIBRARIES(teste_mdd ${APP_DEP} )

install(TARGETS train viterbi_decoding mea_decoding simulate testeFBGHMM testeGPHMM simulateAlignment align predalign runAllPredalignTests bayes_classifier one_file_model sliding_window evaluate kullback_positional posterior_probabilities posterior_decoding print_graph_from_model profileHMMtests
       RUNTIME DESTINATION bin
       LIBRARY DESTINATION lib
       ARCHIVE DESTINATION lib/static)
